// Code generated by protoc-gen-gogo.
// source: message.proto
// DO NOT EDIT!

/*
Package messages is a generated protocol buffer package.

It is generated from these files:
	message.proto

It has these top-level messages:
	Request
	Keyvalue
*/
package messages

import proto "github.com/gogo/protobuf/proto"
import math "math"

// discarding unused import gogoproto "github.com/gogo/protobuf/gogoproto/gogo.pb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Request struct {
	Endpoint         string     `protobuf:"bytes,1,opt,name=endpoint" json:"endpoint"`
	Headers          []Keyvalue `protobuf:"bytes,2,rep,name=headers" json:"headers"`
	Body             []byte     `protobuf:"bytes,3,opt,name=body" json:"body"`
	Originator       string     `protobuf:"bytes,4,opt,name=originator" json:"originator"`
	ClientTimeout    string     `protobuf:"bytes,5,opt,name=clientTimeout" json:"clientTimeout"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}

func (m *Request) GetEndpoint() string {
	if m != nil {
		return m.Endpoint
	}
	return ""
}

func (m *Request) GetHeaders() []Keyvalue {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Request) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Request) GetOriginator() string {
	if m != nil {
		return m.Originator
	}
	return ""
}

func (m *Request) GetClientTimeout() string {
	if m != nil {
		return m.ClientTimeout
	}
	return ""
}

type Keyvalue struct {
	Key              string `protobuf:"bytes,1,opt,name=key" json:"key"`
	Value            string `protobuf:"bytes,2,opt,name=value" json:"value"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Keyvalue) Reset()         { *m = Keyvalue{} }
func (m *Keyvalue) String() string { return proto.CompactTextString(m) }
func (*Keyvalue) ProtoMessage()    {}

func (m *Keyvalue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Keyvalue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
}
